buildscript {
	ext {
		springBootVersion = '2.7.8'
		set('springCloudVersion', "2021.0.5")
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
}

plugins {
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.springframework.boot' version '2.7.8'
	id "org.sonarqube" version "3.4.0.2513"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

//added to accept systemproperties while executing gradlew test cmd
test {
	systemProperties = System.properties
	jvmArgs "--add-opens", "java.base/java.lang=ALL-UNNAMED"
	jvmArgs "--add-opens", "java.base/java.util=ALL-UNNAMED"

}

jar {
	archiveBaseName = 'scsb-doc'
	archiveVersion = '0.0.1-SNAPSHOT'
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17


repositories {
	mavenCentral()
}


dependencies {
	implementation fileTree(dir: '/data/commonjar', include: '*2.5.jar')
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.camel.springboot:camel-spring-boot-starter:3.20.2'
	implementation('org.springframework.data:spring-data-solr:4.3.15')
			{exclude module: 'solr-solrj'; exclude module: 'solr-data-commons'; exclude module: 'spring-data-jpa'}
	implementation 'org.apache.solr:solr-solrj:8.11.1'
	implementation 'org.apache.camel:camel-solr:3.20.2'
	implementation 'org.apache.camel:camel-bindy:3.20.2'
	implementation 'org.apache.camel:camel-metrics:3.20.2'
	implementation 'org.apache.camel:camel-csv:3.20.2'
	implementation 'org.apache.camel:camel-mail:3.20.2'
	implementation 'org.apache.camel:camel-ftp:3.20.2'
	implementation 'org.apache.camel:camel-activemq:3.20.2'
	implementation('org.apache.camel.springboot:camel-aws-s3-starter:3.8.0')
	implementation('org.apache.camel:camel-aws-s3:3.8.0')
	implementation 'org.apache.activemq:activemq-camel:5.16.6'
	implementation 'org.apache.activemq:activemq-pool:5.17.4'
	implementation 'org.apache.activemq:activemq-broker:5.17.4'
	implementation 'org.apache.activemq:activemq-client:5.17.4'
	implementation 'commons-beanutils:commons-beanutils:1.9.4'
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'info.freelibrary:freelib-marc4j:2.6.12'
	implementation 'net.sourceforge.javacsv:javacsv:2.0'
	implementation 'commons-codec:commons-codec:1.15'
	implementation 'org.codehaus.jettison:jettison:1.5.3'
	implementation 'junit:junit:4.13.2'
	//implementation 'org.springframework.plugin:spring-plugin-core:2.0.0.RELEASE'
	implementation('com.google.guava:guava:31.1-jre') {exclude module: "solr-solrj"}
	implementation 'org.projectlombok:lombok:1.18.26'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation('org.apache.commons:commons-text:1.10.0');
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation group: 'org.json', name: 'json', version: '20230227'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
	implementation('org.apache.poi:poi-ooxml:5.2.3')
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	testImplementation 'org.projectlombok:lombok:1.18.26'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	implementation('javax.validation:validation-api:2.0.1.Final')
	
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.12.4'
	testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
	testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.9'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'

	implementation('io.springfox:springfox-boot-starter:3.0.0')


}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.apache.logging.log4j') {
			details.useVersion '2.20.0'
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

/*jacoco {
	toolVersion = "0.7.9"
	reportsDir = file("$buildDir/customJacocoReportDir")
}*/

test {
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}


jacoco {
	toolVersion = "0.8.8"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}


task scsbDocJavadocs(type: Javadoc) {
	source = sourceSets.main.java
	classpath = configurations.implementation
	options.addStringOption('Xdoclint:none', '-quiet')
	String home = System.getProperty("user.home");
	destinationDir = new File(home+"/scsb-javadocs/scsb-doc");
}


jar {
	enabled = false
	archiveClassifier = '' //use empty string
}